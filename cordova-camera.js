// Generated by CoffeeScript 1.10.0
(function() {
  Polymer({
    is: "cordova-camera",
    properties: {

      /* Allow simple editing of image before selection. */
      allowEdit: {
        reflectToAttribute: true,
        type: Boolean,
        value: false
      },

      /* Choose the camera to use ("front"- or "back"-facing). */
      cameraDirection: {
        reflectToAttribute: true,
        type: String,
        value: "back"
      },

      /* Choose the format of the return value ("data_url", "file_uri" Android,
         "native_uri" iOS).
       */
      destination: {
        reflectToAttribute: true,
        type: String,
        value: "data_url"
      },

      /* Choose the returned image file's encoding ("png" or "jpeg"). */
      encoding: {
        reflectToAttribute: true,
        type: String,
        value: "png"
      },

      /* Combination of targetWidth and targetHeight properties (i.e.: "100x80",
         "100", "x80").
       */
      maxSize: {
        observer: "_observeSize",
        reflectToAttribute: true,
        type: String
      },

      /* Result media */
      media: {
        notify: true,
        readOnly: true,
        type: String
      },

      /* Quality of the saved image, expressed as a range of 0-100, where 100 is
      typically full resolution with no loss from file compression.
       */
      quality: {
        reflectToAttribute: true,
        type: Number,
        value: 50
      },

      /* Save the image to the photo album on the device after capture. */
      saveToGallery: {
        reflectToAttribute: true,
        type: Boolean,
        value: false
      },

      /* Set the source of the picture ("photolibrary", "camera",
         "savedphotoalbum").
       */
      source: {
        reflectToAttribute: true,
        type: String,
        value: "camera"
      }
    },
    _media: function(media) {
      var Camera, options, ref, setMedia, size;
      Camera = navigator.camera;
      size = (ref = this.maxSize) != null ? typeof ref.split === "function" ? ref.split("x") : void 0 : void 0;
      options = {
        allowEdit: this.allowEdit,
        cameraDirection: Camera.Direction[this.cameraDirection.toUpperCase()],
        destinationType: Camera.DestinationType[this.destination.toUpperCase()],
        encodingType: Camera.EncodingType[this.encoding.toUpperCase()],
        mediaType: Camera.MediaType[media.toUpperCase()],
        quality: this.quality,
        saveToPhotoAlbum: this.saveToGallery,
        sourceType: Camera.PictureSourceType[this.source.toUpperCase()],
        targetHeight: size != null ? size[1] : void 0,
        targetWith: size != null ? size[0] : void 0
      };
      if (this.ready) {
        setMedia = (function(_this) {
          return function(media) {
            if (_this.destination === "data_url") {
              media = "data:image/jpeg;base64," + media;
            }
            return _this._setMedia(media);
          };
        })(this);
        return navigator.camera.getPicture(setMedia, this.fire.bind(this, "cordova-camera-error"), options);
      }
    },

    /* Allow selection from all media types. */
    all: function() {
      return this._media("allmedia");
    },

    /* Allow selection of still pictures only. */
    photo: function() {
      return this._media("picture");
    },

    /* Allow selection of video only. */
    video: function() {
      return this._media("video");
    }
  });

}).call(this);

//# sourceMappingURL=cordova-camera.js.map
