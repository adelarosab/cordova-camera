// Generated by CoffeeScript 1.10.0
(function() {
  Polymer({
    is: "cordova-camera",
    properties: {
      _media: {
        type: String
      },
      allowEdit: {
        reflectToAttribute: true,
        type: Boolean,
        value: false
      },
      cameraDirection: {
        reflectToAttribute: true,
        type: String,
        value: "back"
      },
      encoding: {
        reflectToAttribute: true,
        type: String,
        value: "png"
      },
      media: {
        notify: true,
        readOnly: true,
        type: String
      },
      output: {
        reflectToAttribute: true,
        type: String,
        value: "data_url"
      },
      quality: {
        reflectToAttribute: true,
        type: Number,
        value: 50
      },
      saveToGallery: {
        reflectToAttribute: true,
        type: Boolean,
        value: false
      },
      size: {
        observer: "_observeSize",
        reflectToAttribute: true,
        type: String
      },
      source: {
        reflectToAttribute: true,
        type: String,
        value: "camera"
      }
    },
    _media: function(media) {
      var camera, options, ref, size;
      camera = navigator.camera;
      size = size != null ? typeof size.split === "function" ? size.split("x") : void 0 : void 0;
      options = {
        allowEdit: this.allowEdit,
        cameraDirection: camera.Direction[this.cameraDirection.toUpperCase()],
        destinationType: camera.DestinationType[this.output.toUpperCase()],
        encodingType: camera.EncodingType[this.encoding.toUpperCase()],
        mediaType: camera.MediaType[media.toUpperCase()],
        quality: this.quality,
        saveToPhotoAlbum: this.saveToGallery,
        sourceType: camera.PictureSourceType[this.source.toUpperCase()],
        targetHeight: size != null ? size[1] : void 0,
        targetWith: size != null ? size[0] : void 0
      };
      if (options.allowEdit == null) {
        options.allowEdit = false;
      }
      if (options.cameraDirection == null) {
        options.cameraDirection = camera.Direction.BACK;
      }
      if (options.destinationType == null) {
        options.destinationType = camera.DestinationType.DATA_URL;
      }
      if (options.encodingType == null) {
        options.encodingType = camera.EncodingType.PNG;
      }
      if ((0 > (ref = this.quality) && ref < 100)) {
        options.quality = 50;
      }
      if (options.saveToPhotoAlbum == null) {
        options.saveToPhotoAlbum = false;
      }
      if (options.sourceType == null) {
        options.sourceType = camera.PictureSourceType.CAMERA;
      }
      if (options.targetHeight == null) {
        options.targetHeight = void 0;
      }
      if (options.targetWidth == null) {
        options.targetWidth = void 0;
      }
      return this.$.enabler.promise.then((function(_this) {
        return function() {
          return navigator.camera.getPicture((function(media) {
            return _this._setMedia(media);
          }), _this.fire.bind(_this, "cordova-camera-error"), options);
        };
      })(this));
    },
    all: function() {
      return this._media("allmedia");
    },
    photo: function() {
      return this._media("picture");
    },
    video: function() {
      return this._media("video");
    }
  });

}).call(this);

//# sourceMappingURL=cordova-camera.js.map
